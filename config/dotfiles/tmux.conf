# which shell to use
ZSH_LOCATION=$(which_zsh)
# set-option -g default-shell $ZSH_LOCATION
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Selecting next pane using "Tab"
# -r is to enable repeat of command without need for pressing prefix again
# Tab is repeatable, within repeat-time (ms) delay...
bind-key -r Tab select-pane -t :.+

# C-a C-a for last active window
bind-key C-a last-window

#enable vi-keys
set-window-option -g mode-keys vi

# split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# copy from terminal
bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind-key -T copy-mode-vi 'v' send -X begin-selection
# # switch panes using control-vim-move without prefix
# bind -n C-h select-pane -L
# bind -n C-l select-pane -R
# bind -n C-k select-pane -U
# bind -n C-j select-pane -D

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

# use Shift+Down Arrow to switch to "inner" (ie remote) tmux session
bind -n S-down \
	send-keys M-F12 \; \
	set -qg status-bg colour17\; \
	set -qg prefix C-b \; \
    unbind -n C-h \; \
    unbind -n C-j \; \
    unbind -n C-k \; \
    unbind -n C-l \; \
    unbind -n -T copy-mode-vi C-h \; \
    unbind -n -T copy-mode-vi C-j \; \
    unbind -n -T copy-mode-vi C-k \; \
    unbind -n -T copy-mode-vi C-l

# use Shift+Up Arrow to switch to "outer" (ie local) tmux session
bind -n S-up \
	send-keys M-F11 \; \
	set -qg status-bg default \; \
	set -qg prefix C-a \; \
    bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L" \; \
    bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D" \; \
    bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U" \; \
    bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R" \; \
    bind-key -T copy-mode-vi C-h select-pane -L \; \
    bind-key -T copy-mode-vi C-j select-pane -D \; \
    bind-key -T copy-mode-vi C-k select-pane -U \; \
    bind-key -T copy-mode-vi C-l select-pane -R 

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -se c -i"

# Emulate scrolling by sending up and down keys if these commands are running in the pane
tmux_commands_with_legacy_scroll="nano less more man git"

bind-key -T root WheelUpPane \
	if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Up" "copy-mode -et="'

bind-key -T root WheelDownPane \
	if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Down" "send -Mt="'

# fix window numbering
set -g base-index 1
setw -g pane-base-index 1
#set -g renumber-windows on
# Faster command sequence, no delay is sending command
set -sg escape-time 0

# don't rename windows automatically
set-option -g allow-rename off

#resize panes
#bind -r C-Left resize-pane -L 1
#bind -r C-Up resize-pane -U 1
bind-key -r -T prefix C-k resize-pane -U 10
bind-key -r -T prefix C-j resize-pane -D 10
bind-key -r -T prefix C-h resize-pane -L 10
bind-key -r -T prefix C-l resize-pane -R 10

######################
### DESIGN CHANGES ###
######################

# panes

## Status bar design
# status line
set -g status-justify left
set -g status-interval 2

# messaging
set -g message-command-style fg=blue,bg=black

#window mode

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "

# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell on
set-option -g visual-silence off
set-window-option -g monitor-activity on
set-option -g bell-action other

set -g default-terminal "screen-256color"

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-style bg=colour6,fg=colour0,bold,fg=colour196,bg=colour238

# }
# The panes {

set -g pane-border-style fg=black,bg=colour235,fg=colour238
set -g pane-active-border-style fg=brightred,bg=colour236,fg=colour51

# }
# The statusbar {

set -g status-position top
set -g status-style bg=default,fg=colour12,bg=colour234,fg=colour137,dim
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S C=#{continuum_status} '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style bg=colour0,fg=colour11,dim,fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style bg=green,fg=black,reverse,fg=colour138,bg=colour235,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style bold,fg=colour255,bg=colour1

# }
# The messages {

set -g message-style fg=black,bg=yellow,bold,fg=colour232,bg=colour166

# }


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'
set -g @continuum-save-interval '1'
# set -g @continuum-boot 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
